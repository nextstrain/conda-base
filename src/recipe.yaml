package:
  name: nextstrain-base
  version: ${{ env.get("VERSION") }}

build:
  number: 0

  # If we were using conda-build, we'd use "pin_depends: strict" here and
  # replace our entire two-pass build process!  But using rattler-build lets us
  # get even more specific pinnings (e.g. with channels) and a bit more control
  # over the build process.  It's output is also a fair bit easier to read.
  #   -trs, 8 May 2025

source:
  path: .

about:
  homepage: https://nextstrain.org
  documentation: https://docs.nextstrain.org/
  repository: https://github.com/nextstrain/conda-base
  summary: Base Nextstrain runtime (meta-package)
  description: >
    This meta-package depends on all the other packages needed for a base
    Nextstrain runtime installed as a Conda environment.  As the
    nextstrain/base image is to Nextstrain CLI's Docker runtime, this
    nextstrain-base package is to Nextstrain CLI's Conda runtime.

requirements:
  # Declare "host" requirements (i.e. build requirements for the target arch)
  # instead of "run" requirements because rattler-build's rendered recipe only
  # includes the full solve for build and host requirements and not run
  # requirements.  In devel/build, we move the resolved host requirements into
  # the package's run requirements.
  #   -trs, 8 May 2025
  host:
    #
    # First-party
    #
    # XXX TODO: Include fauna?
    #
    - augur
    - auspice
    - evofr
    - nextalign
    - nextclade2
    - nextclade
    - nextstrain-cli
    - pathogen-embed

    #
    # Third-party
    #
    # XXX TODO: Pin some of these to the same versions the Docker runtime uses?
    # XXX TODO: No package available for Python envdir package.
    # XXX TODO: No package available for less.
    # XXX TODO: Omits pysam… but it may be unnecessary in the Docker runtime?
    # XXX TODO: Omits pango-designation… but it may be unnecessary in the Docker runtime?
    #
    # Include bash so that a newer version is guaranteed to be available on
    # systems with an older bash.  This is similar to how our Docker runtime
    # image includes its own bash too.
    #
    - awscli >=2
    - bash
    - bzip2
    - csvtk
    - coreutils
    - curl
    - epiweeks
    - git
    - gawk
    - google-cloud-storage
    - grep
    - gzip
    - iqtree >=2
    - jq
    - ncbi-datasets-cli
    - pango_aliasor
    - perl
      # Pin pulp <2.8 for snakemake: https://github.com/snakemake/snakemake/issues/2607
    - pulp <2.8
    - ruby
    - sed
    - seqkit
    - snakemake <8
    - sqlite
    - tar
    - tsv-utils
    - unzip
    - wget
    - xlrd
    - xz
    - zip
    - zstd

    # Avoid a newer minimum glibc version introduced by c-ares 1.33.0¹.  This
    # pin keeps the previous glibc requirement of ≥2.17 instead of ≥2.28.²
    # Eventually this pin will become unworkable, but we can keep it for now.
    #
    # Note that using run_constrained doesn't work (at least on the face of
    # it), potentially (?) because of our two-step build process.
    #   -trs, 16 Sept 2024
    #
    # ¹ <https://github.com/conda-forge/c-ares-feedstock/pull/38>
    # ² <https://github.com/nextstrain/conda-base/issues/92>
    - c-ares <1.33.0
